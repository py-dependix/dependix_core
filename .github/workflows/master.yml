name: CI/CD du projet Python

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  release:
    types: [published]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: ⬇️ Checkout du code
        uses: actions/checkout@v4

      - name: ⚙️ Configuration de l'environnement Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: 📦 Installation de Poetry
        run: pipx install poetry

      - name: 🛠️ Installation des dépendances du projet
        run: poetry install --no-root

      - name: ✅ Lancement des tests avec pytest
        run: poetry run pytest

      - name: 🔍 Lancement du linter (Black)
        run: poetry run black --check .

  # -------------------------------------------------------------
  
  publish-pypi:
    name: Déploiement sur PyPI
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: ⬇️ Checkout du code
      uses: actions/checkout@v4

    - name: 📦 Configuration de Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        cache: 'poetry'

    - name: ⚙️ Installation de Poetry
      run: pipx install poetry

    - name: 🏗️ Création du package (wheel & sdist)
      run: poetry build

    - name: 🚀 Publication sur PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: 'dist/'