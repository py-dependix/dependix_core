name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: "latest"
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction
    
    - name: Install Pylint dependencies
      run: poetry run pip install dill

    - name: Run linting
      run: |
        poetry run pylint --fail-under=0 dependix_core || true
        poetry run black --check .

    - name: Run tests
      run: poetry run pytest --cov=dependix_core --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  # -------------------------------------------------------------
  
  publish-pypi:
    name: D√©ploiement sur PyPI
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: ‚¨áÔ∏è Checkout du code
      uses: actions/checkout@v4

    - name: üì¶ Configuration de Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        cache: 'poetry'

    - name: ‚öôÔ∏è Installation de Poetry
      run: pipx install poetry

    - name: üèóÔ∏è Cr√©ation du package (wheel & sdist)
      run: poetry build

    - name: üöÄ Publication sur PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: 'dist/'